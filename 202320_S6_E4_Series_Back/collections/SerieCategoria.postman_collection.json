{
	"info": {
		"_postman_id": "c6afde95-8fe0-4a05-95ff-e37869a7b6b1",
		"name": "SerieCategoria",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29108472"
	},
	"item": [
		{
			"name": "Crear una serie Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"serie_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Peaky Blinders\",\r\n    \"imagen\": \"PeakyBlinders.png\",\r\n    \"wallpaper\": \"PeakyBlinders.png\",\r\n    \"sinopsis\": \"Birmingham, 1939. Thomas Shelby es el violento líder de una conocida banda. Es un jefe del crimen organizado dispuesto a llegar a lo más alto sin importar el precio.\",\r\n    \"anio\": 2013\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/series",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series"
					]
				}
			},
			"response": [
				{
					"name": "Crear una serie",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Peaky Blinders\",\r\n    \"imagen\": \"PeakyBlinders.png\",\r\n    \"sinopsis\": \"Birmingham, 1939. Thomas Shelby es el violento líder de una conocida banda. Es un jefe del crimen organizado dispuesto a llegar a lo más alto sin importar el precio.\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/series",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"nombre\": \"Peaky Blinders\",\n    \"imagen\": \"PeakyBlinders.png\",\n    \"wallpaper\": \"PeakyBlinders.png\",\n    \"sinopsis\": \"Birmingham, 1939. Thomas Shelby es el violento líder de una conocida banda. Es un jefe del crimen organizado dispuesto a llegar a lo más alto sin importar el precio.\",\n    \"anio\": 2013\n}"
				}
			]
		},
		{
			"name": "Crear una categoría Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"categoria_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Humor\",\r\n    \"imagen\": \"Humor.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Crear una categoría",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Humor\",\n    \"imagen\": \"Humor.png\"\n}"
				}
			]
		},
		{
			"name": "Agregar una categoria a una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias/{{categoria_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias",
						"{{categoria_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Agregar una categoria a una serie",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias/{{categoria_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias",
								"{{categoria_id_1}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"name\": \"Humor\"\r\n}"
				}
			]
		},
		{
			"name": "Agregar una categoria que no existe a una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Categoria no encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Agregar una categoria que no existe a una serie",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:15:29\",\r\n        \"message\": \"The categoria with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Obtener una categoria de una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias/{{categoria_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias",
						"{{categoria_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una categoria de una serie",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias/{{categoria_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias",
								"{{categoria_id_1}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"name\": \"Humor\"\r\n}"
				}
			]
		},
		{
			"name": "Obtener una categoria de una serie que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Categoria no encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una categoria de una serie que no existe",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/serie/{{serie_id}}/categorias/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"serie",
								"{{serie_id}}",
								"categorias",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:17:39\",\r\n        \"message\": \"The categoria with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Crear una categoría Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"categoria_id_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Humor\",\r\n    \"imagen\": \"Humor.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Crear una categoría",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Humor\",\n    \"imagen\": \"Humor.png\"\n}"
				}
			]
		},
		{
			"name": "Obtener una categoria que no está asociada a una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"The categoria is not associated to the serie\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias/{{categoria_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias",
						"{{categoria_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener una categoria que no está asociada a una serie",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias/{{categoria_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias",
								"{{categoria_id_2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"PRECONDITION_FAILED\",\r\n        \"timestamp\": \"21-02-2023 10:19:03\",\r\n        \"message\": \"The cateogria is not associated to the categoria\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Obtener las categorias de una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Numero de categorias > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Obtener las categorias de una serie",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"id\": 1,\r\n    \"name\": \"Humor\"\r\n}"
				}
			]
		},
		{
			"name": "Crear una categoría Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"categoria_id_3\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Humor\",\r\n    \"imagen\": \"Humor.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Crear una categoría",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Humor\",\n    \"imagen\": \"Humor.png\"\n}"
				}
			]
		},
		{
			"name": "Crear una categoría Copy 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"categoria_id_4\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"nombre\": \"Humor\",\r\n    \"imagen\": \"Humor.png\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Crear una categoría",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Humor\",\n    \"imagen\": \"Humor.png\"\n}"
				}
			]
		},
		{
			"name": "Asociar categorias a una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\r\n    \"id\": {{categoria_id_3}},\r\n    \"nombre\": \"Humor\",\r\n    \"imagen\": \"Humor.png\"\r\n},\r\n{\r\n    \"id\": {{categoria_id_4}},\r\n    \"nombre\": \"Humor\",\r\n    \"imagen\": \"Humor.png\"\r\n}\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Asociar categorias a una serie",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{\r\n    \"id\": {{new_id_b}},\r\n    \"name\": \"Humor\"\r\n},\r\n{\r\n    \"id\": {{new_id_b2}},\r\n    \"name\": \"Terror\"\r\n}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"name\": \"Humor\",\r\n        \"series\": []\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Terror\",\r\n        \"series\": []\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Asociar categorias que no existen a una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Categoria no encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"name\": \"Terror\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias"
					]
				}
			},
			"response": [
				{
					"name": "Asociar categorias que no existen a una serie",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": 0,\r\n        \"name\": \"Terror\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:25:21\",\r\n        \"message\": \"The categoria with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Borrar una categoria de una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id_1}}/categorias/{{categoria_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id_1}}",
						"categorias",
						"{{categoria_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar una categoria de una serie",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias{{categoria_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias{{categoria_id_2}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Borrar una categoria a una serie que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Serie no encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/0/categorias/{{categoria_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"0",
						"categorias",
						"{{categoria_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Borrar una categoria a una serie que no existe",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/0/categorias/{{categoria_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"0",
								"categorias",
								"{{categoria_id_2}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:25:21\",\r\n        \"message\": \"The serie with the given id was not found\"\r\n    }\r\n}"
				}
			]
		},
		{
			"name": "Borrar una categoria que no existe de una serie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.apierror.message).to.eql(\"Categoria no encontrada\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/series/{{serie_id}}/categorias/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"series",
						"{{serie_id}}",
						"categorias",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Borrar una categoria que no existe de una serie",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/series/{{serie_id}}/categorias/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"series",
								"{{serie_id}}",
								"categorias",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"apierror\": {\r\n        \"status\": \"NOT_FOUND\",\r\n        \"timestamp\": \"21-02-2023 10:25:21\",\r\n        \"message\": \"The categoria with the given id was not found\"\r\n    }\r\n}"
				}
			]
		}
	]
}